@page "/resume"
@using CameronAnderson.Resume

@if (resume == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div class="heading">
		<div class="name">@resume.Name</div>
		<div class="location">@resume.Location</div>
		@foreach (var link in resume.Links)
		{
			<a class="link" href="@link.Url" target="_blank">
				@link.Text
			</a>

			@if (!link.Equals(resume.Links.Last()))
			{
				<svg class="link-separator" height="30" width="30">
					<circle cx="15" cy="15" r="7" fill="black" />
				</svg>
			}
		}
	</div>

	<div class="section">
		<div class="section-heading">Experience</div>
		@foreach (var experience in resume.Experiences)
		{
			<div class="experience">
				<div class="experience-heading">@experience.Position</div>
				<div class="experience-date">@experience.EmploymentStart.ToString("Y") &mdash; @(experience.EmploymentEnd == null ? "Present" : experience.EmploymentEnd.Value.ToString("Y"))</div>
				<a class="experience-subheading" href="@experience.Company.Url" target="_blank">
					@experience.Company.Name &mdash; @experience.Company.Location
				</a>

				<div class="notes">
					@foreach (var note in experience.Notes)
					{
						<div class="experience-note">- @note</div>
					}
				</div>
			</div>
		}
	</div>

	<div class="section">
		<div class="section-heading">Education</div>
		@foreach (var education in resume.Education)
		{
			<div class="experience">
				<div class="experience-heading">@education.Degree</div>
				<div class="experience-date">@education.Date.ToString("Y")</div>
				<div class="experience-subheading">@education.Major</div>
				<a class="experience-note" href=@education.Institution.Url target="_blank">
					@education.Institution.Name, @education.Institution.Location
				</a>
				<div class="experience-note">GPA:  @education.Gpa.ToString("0.0")</div>
				@if (!string.IsNullOrWhiteSpace(education.Note))
				{
					<div class="experience-note">@education.Note</div>
				}
			</div>
		}
	</div>
}

@code
{
	private CameronAnderson.Resume.Resume? resume { get; set; }

	protected override async Task OnInitializedAsync()
	{
		resume = ResumeInteractor.GetResume();
	}

}
